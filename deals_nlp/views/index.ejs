<!DOCTYPE html>
<html>

<head>
  <title>
    DeALs NLP Test
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />

  <link rel='stylesheet' href='https://bootswatch.com/4/flatly/bootstrap.min.css' />

  <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script src="https://unpkg.com/compromise@latest/builds/compromise.min.js"></script>
</head>

<body>
  <p>Welcome to the DeALs shallow NLP tester.
  </p>

  <!-- Development Env. for the shallow NLP  -->
  <div class="container-fluid">
    Start the sentence with "Write a rule to ..."
    <div class="row">
      <textarea class="form-control" id="sentenceInput" onkeyup="keyUpListener();" rows="2">Write a rule to do something here!</textarea>
    </div>
    <br>
    <div class="row justify-content-center">
      <button type="button" id="parseSentence" class="btn btn-info">parseSentence</button>
    </div>
    <br>
    <div class="row">
      <textarea class="form-control" id="nlpOutput" rows="12">Shallow NLP output</textarea>
    </div>
    <br>
    <br> List of Databases:
    <div class="row">
      <ul class="list-group" id="databaseList">
      </ul>
    </div>
  </div>

  <script>

    function keyUpListener() {
      var key = event.hasOwnProperty('which') ? event.which : event.keyCode;
      if ($('#sentenceInput').val().startsWith("Write a rule to")) {
        $('#parseSentence').click();
      }
    }

    class nounClause {
      constructor(value, type) {
        this.value = value;
        this.type = type;
      }
    }

    class verbClause {
      constructor(value, type) {
        this.value = value;
        this.type = type;
      }
    }

    class dBs {
      constructor(name, args) {
        this.name = name;
        this.args = args;
      }
    }

    let listDbs = [ new dBs('paper', [ 'id', 'title', 'author', 'conference', 'year' ]), new dBs('test', [ 'x', 'y' ]) ];

    $(function () {
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      /*
      * Experimental NLP Code
      */

      let $dbList = $('#databaseList');
      let dbNameSet = new Set();
      listDbs.forEach(db => {
        dbNameSet.add(db.name);
        let str = db.name + ' (';
        db.args.forEach(arg => {
          str = str + arg + ', ';
        })
        str = str.substring(0, str.length - 2) + ')';
        //$dbList.val($dbList.val() + str + '\n');
        let ruleString = `<li class="ruleList list-group-item d-flex justify-content-between align-items-center">
            ${str} </li>\n`
        $dbList.append(ruleString);
      });

      $('#parseSentence').click(function () {
        event.preventDefault();
        let sentence = $('#sentenceInput').val();

        // Sentence must start with "Write a rule to"
        if (sentence.startsWith("Write a rule to")) {
          sentence = sentence.replace("Write a rule to", "");
          let grabNoun = nlp(sentence).match('(get|grab|search|find|pull|obtain|pick) * [#Noun] * #Noun?');

          // rule barrier = of, from, having
          var str = grabNoun.out('terms');
          //console.log(str);

          $('#nlpOutput').val(JSON.stringify(str));
        }
        else {
          alert('The sentence must start with \'Write a rule to\'');
        }
      });



    });
  </script>

</body>

</html>
